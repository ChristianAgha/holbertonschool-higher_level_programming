The ``0-add_integer`` module
======================

Using ``add_integer``
---------------------

First import ``add_integer`` from the ``0-add_integer`` module:
>>> add_integer = __import__('0-add_integer').add_integer

This is how to  use it with various input:
# input float and int
>>> add_integer(8.0, 5)
13

# input float and int reversed
>>> add_integer(8, 5.0)
13

# input string and int
>>> add_integer('hi', 6)
Traceback (most recent call last):
TypeError: a must be an integer

# input int and string reversed
>>> add_integer(6, 'yo')
Traceback (most recent call last):
TypeError: b must be an integer

# input large number
>>> add_integer(999999999999, 1)
1000000000000

# input None
>>> add_integer(None, None)
Traceback (most recent call last):
TypeError: a must be an integer

# input bool and int
>>> add_integer(True, 45)
46

# input bool and bool
>>> add_integer(False, True)
1

# input list and int
>>> add_integer([1, 2, 3], 7)
Traceback (most recent call last):
TypeError: a must be an integer

# no arguments
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

# extra args
>>> add_integer(6, 2, "well hello there")
Traceback (most recent call last):
TypeError: add_integer() takes 2 positional arguments but 3 were given
